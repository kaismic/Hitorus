name: Release API

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: src/Hitorus.Api/Hitorus.Api.csproj

      - name: Set CURRENT_VERSION env value
        run: |
          currentVersion=$(cat 'src/Hitorus.Api/Hitorus.Api.csproj' | grep -oP '(?<=<Version>)[0-9.]+(?=</Version>)')
          echo "CURRENT_VERSION=$currentVersion" >> $GITHUB_ENV

      - name: Get latest release tag
        id: latest-release-tag
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        with:
          repository: ${{ github.repository }}

      - name: Set LATEST_RELEASE_TAG env value
        run: |
          echo "LATEST_RELEASE_TAG=${{steps.latest-release-tag.outputs.release}}" >> $GITHUB_ENV

      - name: Test if steps.changed-files.outputs.any_changed condition run
        if: ${{ !cancelled() && steps.changed-files.outputs.any_changed }}
        run: echo "steps.changed-files.outputs.any_changed is true!!!"

      - name: Print everything
        if: ${{ !cancelled() }}
        run: |
          echo "CURRENT_VERSION = $CURRENT_VERSION"
          echo "LATEST_RELEASE_TAG = $LATEST_RELEASE_TAG"
          [ "$CURRENT_VERSION" == "$LATEST_RELEASE_TAG" ] && echo "version equal" || echo "version not equal"
          echo "any_changed = ${{steps.changed-files.outputs.any_changed}}"