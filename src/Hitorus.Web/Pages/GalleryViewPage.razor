@layout EmptyLayout
@page "/gallery/{GalleryId:int}"

<PageTitle>@((_gallery == null ? "" : _gallery.Title + " - ") + GalleryId.ToString())</PageTitle>

<MudThemeProvider @ref="@_mudThemeProvider" IsDarkMode="@_isDarkMode" Theme="AppConfigurationService.AppTheme" />
<MudPopoverProvider />

@if (_gallery != null) {
    <MudToolBar Class="gap-4 justify-center" Style=@($"height: {DEFAULT_TOOLBAR_HEIGHT}")>
        <div class="d-flex align-center gap-2">
            <MudNumericField T="int"
                             Margin="Margin.Dense"
                             Value="@PageNumber"
                             ValueChanged="@OnPageNumberChanged"
                             Disabled="@(_viewConfiguration.ViewMode == ViewMode.Scroll && _isAutoScrolling)"
                             Label=@Localizer["Page"]
                             Min="1" Max=@(_imageIndexRanges.Length)
                             Pattern="[0-9]"
                             Variant="Variant.Outlined"
                             Style="max-width: 80px" />
            <MudText>@("/" + _imageIndexRanges.Length)</MudText>
        </div>
        <MudSelect T="ViewMode" FitContent
                   Margin="Margin.Dense"
                   Label=@SharedLocalizer["ViewMode"]
                   Disabled="@_isAutoScrolling"
                   ToStringFunc="@(vm => SharedLocalizer[vm.ToString()])"
                   Value=_viewConfiguration.ViewMode
                   ValueChanged="@OnViewModeChanged"
                   Variant="Variant.Outlined">
            <MudSelectItem Value="ViewMode.Default" />
            <MudSelectItem Value="ViewMode.Scroll" />
        </MudSelect>
        <MudSelect T="FitMode" FitContent
                   Margin="Margin.Dense"
                   Label=@Localizer["ImageFitMode"]
                   Disabled="@_isAutoScrolling"
                   @bind-Value=@_fitMode
                   Variant="Variant.Outlined">
            <MudSelectItem Value="FitMode.Automatic">@SharedLocalizer["Automatic"]</MudSelectItem>
            <MudSelectItem Value="FitMode.Horizontal">@Localizer["Horizontal"]</MudSelectItem>
            <MudSelectItem Value="FitMode.Vertical">@Localizer["Vertical"]</MudSelectItem>
        </MudSelect>
        <div class="d-flex flex-column justify-center align-center">
            <MudTooltip Text="@(_isAutoScrolling ? Localizer["Stop"] : Localizer["Play"])">
                <MudToggleIconButton Toggled=@_isAutoScrolling
                                     ToggledChanged="@ToggleAutoScroll"
                                     Icon="@Icons.Material.Filled.PlayArrow"
                                     ToggledIcon="@Icons.Material.Filled.Pause"
                                     ToggledColor="Color.Primary" />
            </MudTooltip>
        </div>
        @if (_viewConfiguration.ViewMode == ViewMode.Default) {
            <MudSlider T="int" ValueLabel TickMarks
                       Min="1" Max="20"
                       Value=@_viewConfiguration.PageTurnInterval
                       ValueChanged=@OnPageTurnIntervalChanged
                       Variant="Variant.Filled"
                       Style="max-width: 200px">
                <ValueLabelContent>
                    @(context.Value.ToString() + SharedLocalizer["Unit_Second"])
                </ValueLabelContent>
                <ChildContent>
                    @SharedLocalizer["PageTurnInterval"]
                </ChildContent>
            </MudSlider>
        } else {
            <MudSelect T="AutoScrollMode" FitContent
                       Margin="Margin.Dense"
                       Label=@SharedLocalizer["AutoScrollMode"]
                       ToStringFunc="@(m => SharedLocalizer[m.ToString()])"
                       Value=@_viewConfiguration.AutoScrollMode
                       ValueChanged="@OnAutoScrollModeChanged"
                       Variant="Variant.Outlined">
                <MudSelectItem Value="AutoScrollMode.Continuous" />
                <MudSelectItem Value="AutoScrollMode.ByPage" />
            </MudSelect>
            @if (_viewConfiguration.AutoScrollMode == AutoScrollMode.Continuous) {
                <MudSlider T="int" ValueLabel TickMarks
                           Min="1" Max="8"
                           Value=@_viewConfiguration.ScrollSpeed
                           ValueChanged=@OnScrollSpeedChanged
                           Variant="Variant.Filled"
                           Style="max-width: 200px">
                    <ValueLabelContent>
                        @(context.Value.ToString() + SharedLocalizer["Unit_Second"])
                    </ValueLabelContent>
                    <ChildContent>
                        @SharedLocalizer["AutoScrollSpeed"]
                    </ChildContent>
                </MudSlider>
            } else {
                <MudSlider T="int" ValueLabel TickMarks
                           Min="1" Max="20"
                           Value=@_viewConfiguration.PageTurnInterval
                           ValueChanged=@OnPageTurnIntervalChanged
                           Variant="Variant.Filled"
                           Style="max-width: 200px">
                    <ValueLabelContent>
                        @(context.Value.ToString() + SharedLocalizer["Unit_Second"])
                    </ValueLabelContent>
                    <ChildContent>
                        @SharedLocalizer["PageTurnInterval"]
                    </ChildContent>
                </MudSlider>
            }
        }
        <MudIconButton Icon="@(_toolbarOpen ? Icons.Material.Filled.ExpandLess : Icons.Material.Filled.ExpandMore)"
                       OnClick="@(() => _toolbarOpen = !_toolbarOpen)" />
        <MudToggleIconButton Toggled="_isDarkMode"
                             ToggledChanged="@OnDarkModeButtonToggled"
                             Color="Color.Default"
                             Icon="@Icons.Material.Filled.LightMode"
                             ToggledIcon="@Icons.Material.Filled.DarkMode"
                             Style="position: absolute; right: 0px; margin-right: 8px" />
    </MudToolBar>

    <div style=@($"display: {(_toolbarOpen ? "block" : "none")};")>
        <div style="position: absolute; background: var(--mud-palette-background);"
             class="mud-width-full">
            <MudDivider DividerType="DividerType.Middle" />
            <MudToolBar Class="flex-wrap gap-4 justify-center" Style="@($"height: {DEFAULT_TOOLBAR_HEIGHT}")">
                <MudSwitch T="bool"
                           Label=@SharedLocalizer["Loop"]
                           Value=@_viewConfiguration.Loop
                           ValueChanged=@OnLoopChanged
                           Color="Color.Primary" />
                <MudNumericField T="int"
                                 Margin="Margin.Dense"
                                 Value="@_pageOffset"
                                 Disabled="@_isAutoScrolling"
                                 ValueChanged="@OnPageOffsetChanged"
                                 Label=@Localizer["PageOffset"]
                                 Min="0" Max="@(_imagesPerPage - 1)"
                                 Pattern="[0-9]"
                                 Variant="Variant.Outlined"
                                 Style="max-width: 120px" />
                <MudNumericField T="int"
                                 Margin="Margin.Dense"
                                 @bind-Value="@_imagesPerPage"
                                 Disabled="@_isAutoScrolling"
                                 Label=@(_viewConfiguration.ImageLayoutMode == ImageLayoutMode.Automatic ? Localizer["MaxImagesPerPage"] : Localizer["ImagesPerPage"])
                                 Min="1" Max=@Math.Min(4, _gallery.Images.Count)
                                 Pattern="[0-9]"
                                 Variant="Variant.Outlined" />
                <MudSelect T="ImageLayoutMode" FitContent
                           Margin="Margin.Dense"
                           Label=@SharedLocalizer["ImageLayoutMode"]
                           Disabled="@_isAutoScrolling"
                           ToStringFunc="@(m => SharedLocalizer[m.ToString()])"
                           Value=@_viewConfiguration.ImageLayoutMode
                           ValueChanged="@OnImageLayoutModeChanged"
                           Variant="Variant.Outlined">
                    <MudSelectItem Value="ImageLayoutMode.Automatic" />
                    <MudSelectItem Value="ImageLayoutMode.Fixed" />
                </MudSelect>
                <MudSelect T="ViewDirection" FitContent
                           Margin="Margin.Dense"
                           Label=@SharedLocalizer["ViewDirection"]
                           ToStringFunc="@(vd => SharedLocalizer[vd.ToString()])"
                           @bind-Value=_viewConfiguration.ViewDirection
                           Variant="Variant.Outlined">
                    <MudSelectItem Value="ViewDirection.LTR" />
                    <MudSelectItem Value="ViewDirection.RTL" />
                </MudSelect>
            </MudToolBar>
        </div>
    </div>

    <div id="main-container" style="height: calc(100dvh - @DEFAULT_TOOLBAR_HEIGHT); overflow: auto;">
        @if (_imageIndexRanges.Length > 0) {
            <div id="image-container"
                 class="d-flex flex-column justify-center align-center"
                 style="outline: none; background-color: black; min-height: calc(100dvh - @DEFAULT_TOOLBAR_HEIGHT);"
                 tabindex="-1"
                 @onkeydown="@OnKeyDown"
                 @onkeydown:preventDefault="@_preventDefaultKeyDown">
                @if (_viewConfiguration.ViewMode == ViewMode.Default) {
                    <div class="d-flex justify-center" @onclick="@OnPageClick" @onwheel="@OnWheel">
                        @if (_viewConfiguration.ViewDirection == ViewDirection.LTR) {
                            @for (int i = _imageIndexRanges[PageIndex].Start.Value + 1; i < _imageIndexRanges[PageIndex].End.Value + 1; i++) {
                                <img src=@($"{_baseImageUrl}&index={i}") alt=@($"Image {i}") style=@GetImageStyle() />
                            }
                        } else {
                            @for (int i = _imageIndexRanges[PageIndex].End.Value; i > _imageIndexRanges[PageIndex].Start.Value; i--) {
                                <img src=@($"{_baseImageUrl}&index={i}") alt=@($"Image {i}") style=@GetImageStyle() />
                            }
                        }
                    </div>
                } else {
                    @foreach (Range range in _imageIndexRanges) {
                        <div class="d-flex justify-center">
                            @if (_viewConfiguration.ViewDirection == ViewDirection.LTR) {
                                @for (int i = range.Start.Value + 1; i < range.End.Value + 1; i++) {
                                    <img src=@($"{_baseImageUrl}&index={i}") alt=@($"Image {i}") loading="lazy" style=@GetImageStyle() />
                                }
                            } else {
                                @for (int i = range.End.Value; i > range.Start.Value; i--) {
                                    <img src=@($"{_baseImageUrl}&index={i}") alt=@($"Image {i}") loading="lazy" style=@GetImageStyle() />
                                }
                            }
                        </div>
                    }
                }
            </div>
        }
    </div>
}