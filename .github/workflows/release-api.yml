name: Release API

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: src/Hitorus.Api/Hitorus.Api.csproj

      - name: Set CURRENT_VERSION env value
        run: |
          currentVersion=$(cat 'src/Hitorus.Api/Hitorus.Api.csproj' | sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p')
          echo "CURRENT_VERSION=$currentVersion" >> $GITHUB_ENV

      - run: git fetch --tags origin

      - name: Get previous tag
        id: previous-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        with:
          prefix: v
          fallback: v0.0.0

      - name: Set LATEST_RELEASE_VERSION env value
        env:
          TAG_WITH_V: ${{steps.previous-tag.outputs.tag}}
        run: echo "LATEST_RELEASE_VERSION=${TAG_WITH_V:1}" >> $GITHUB_ENV

      - name: Test if steps.changed-files.outputs.any_changed condition run
        if: ${{ steps.changed-files.outputs.any_changed == true }}
        run: |
          echo "steps.changed-files.outputs.any_changed is true and this step was run!!!"
          echo "CURRENT_VERSION = $CURRENT_VERSION"
          echo "LATEST_RELEASE_VERSION = $LATEST_RELEASE_VERSION"
          [ "$CURRENT_VERSION" == "$LATEST_RELEASE_VERSION" ] && echo "version equal" || echo "version not equal"

      - name: Print everything
        run: |
          echo "CURRENT_VERSION = $CURRENT_VERSION"
          echo "LATEST_RELEASE_VERSION = $LATEST_RELEASE_VERSION"
          [ "$CURRENT_VERSION" == "$LATEST_RELEASE_VERSION" ] && echo "version equal" || echo "version not equal"
          echo "any_changed = ${{steps.changed-files.outputs.any_changed}}"