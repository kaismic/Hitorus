name: Release API

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

jobs:
  target-file-changed:
    runs-on: ubuntu-latest
    outputs:
      value: ${{ fromJson(steps.changed-files.outputs.any_changed) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: src/Hitorus.Api/Hitorus.Api.csproj

  current-version:
    runs-on: ubuntu-latest
    needs: target-file-changed
    outputs:
      version: ${{ steps.get-current-version.outputs.value }}
    steps:
      - id: get-current-version
        run: |
          currentVersion=$(cat 'src/Hitorus.Api/Hitorus.Api.csproj' | sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p')
          echo "value=$currentVersion" >> $GITHUB_OUTPUT

  latest-release-version:
    runs-on: ubuntu-latest
    needs: current-version
    outputs:
      version: ${{ steps.trim-prefix.outputs.value }}
    steps:
      - run: git fetch --tags origin
      - id: get-prev-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        with:
          prefix: v
          fallback: v0.0.0
      - id: trim-prefix
        env:
          TAG_WITH_V: ${{steps.get-prev-tag.outputs.tag}}
        run: echo "value=${TAG_WITH_V:1}" >> $GITHUB_OUTPUT

  compare-versions:
    runs-on: ubuntu-latest
    needs: [current-version, latest-release-version]
    outputs:
      description: returns true if versions are equal, otherwise false
      value: ${{ fromJson(steps.compare.outputs.value) }}
    steps:
      - id: compare
        run: |
          echo "value=${{ needs.current-version.outputs.version == needs.latest-release-version.outputs.version }}" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: [current-version, compare-versions]
    if: !needs.compare-versions.outputs.value
    steps:
      - run: echo "Releasing version ${{ needs.current-version.outputs.version }}!!!"
